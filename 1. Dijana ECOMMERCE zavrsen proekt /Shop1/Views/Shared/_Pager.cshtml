@model Shop1.Models.Pager


<div class="container">
    @if (Model.TotalPages > 0)
    {
        <ul class="pagination justify-content-end rounding-0 pagination-border">


            @if (Model.CurrentPage > 1)
            {
                <li class="page-item rounded-0 pagination-border">
                    <a class="page-link" style="border-radius: 0;" asp-controller="Product" asp-action="Index" asp-route-pg="1">first</a>
                </li>

                <li class="pagination-border">
                    <a class="page-link" style="" asp-controller="Product" asp-action="Index" asp-route-pg="@(Model.CurrentPage - 1)">previous</a>
                </li>
            }

            @for (var pge = Model.StartPage; pge <= Model.EndPage; pge++)
            {
                <li class="page-item pagination-border @(pge == Model.CurrentPage ? "active" : "")">
                    <a class="page-link rounded-0" style="" asp-controller="Product" asp-action="Index" asp-route-pg="@pge">
                        @pge
                    </a>
                </li>
            }
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item pagination-border">
                    <a class="page-link rounded-0" style="" asp-controller="Product" asp-action="Index" asp-route-pg="@(Model.CurrentPage + 1)">next</a>
                </li>

                <li class="pagination-border">
                    <a class="page-link" style="border-radius: 0;" asp-controller="Product" asp-action="Index" asp-route-pg="@(Model.TotalPages)">last</a>
                </li>
            }
        </ul>
    }
</div>