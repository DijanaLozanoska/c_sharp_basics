@model proba6.Models.Product
@{
    ViewData["Title"] = "Details";
}

@using proba6.Utility
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{

    List<Product> products = HttpContextAccessor.HttpContext.Session.Get<List<Product>>("products");
    Product product = null;
    if (products != null)
    {
        product = products.FirstOrDefault(c => c.Id == Model.Id);
    }
}

<br />

<h2 class="text-info">Product Details</h2>
<form asp-action="Detail" method="post" enctype="multipart/form-data">
    <div class="p-4 rounded border row">
        <div asp-validation-summary="ModelOnly" class="text-danger">

        </div>

        <div class="col-8">
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="ProductName"></label>
                </div>
                <div class="col-8">
                    <input type="hidden" asp-for="Id" />
                    <input asp-for="ProductName" readonly="readonly" class="form-control" />
                </div>
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="ProductDescription"></label>
                </div>
                <div class="col-8">
                    <input asp-for="ProductDescription" readonly="readonly" class="form-control" />
                </div>
                <span asp-validation-for="ProductDescription" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="ProductPrice"></label>
                </div>
                <div class="col-8">
                    <input asp-for="ProductPrice" readonly="readonly" class="form-control" />
                </div>
                <span asp-validation-for="ProductPrice" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="CategoryId"></label>
                </div>
                <div class="col-8">
                    @*<select asp-for="ProductTypeId" asp-items="ViewBag.productTypeId" class="form-control"> </select>*@
                    <input asp-for="CategoryId" readonly="readonly" class="form-control" />
                </div>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group row">
                <div class="col-4">

                </div>
                <div class="col-8">
                    @if (product != null)
                    {
                        <button type="submit" class="btn btn-danger form-control" asp-action="Remove" asp-route-id="@Model.Id">Remove from Cart</button>
                    }
                    else
                    {
                        <input type="submit" class="btn btn-info form-control" value="Add to Cart" />
                    }
                </div>

            </div>

            <div class="form-group">
                <a asp-action="Index" class="btn btn-success">Back to List</a>
            </div>
        </div>
        <div class="col-1"></div>
        <div class="col-3">
            <img src="~/@Model.ProductPicture" width="100%" height="250px" style="border-radius: 5px;border: 1px solid #efefef" />
            
            @if (Model.IsAvailable)
            {   <br />
                <img src="~/Images/instock.png" width="200px" height="50px" />
                @*<h2> Available </h2>*@
            }
            else
            {   <br />
                <img src="~/Images/notavailable.png" width="200px" height="50px" />
            }
        </div>

    </div>
</form>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

